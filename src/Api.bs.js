// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Json = require("bs-json/src/Json.js");
var Process = require("process");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Json_decode = require("bs-json/src/Json_decode.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var Plant$PlantSaver = require("./Plant.bs.js");

var NoAppId = Caml_exceptions.create("Api-PlantSaver.NoAppId");

function temp(json) {
  return /* record */[
          /* temp */Json_decode.field("temp", Json_decode.$$float, json),
          /* temp_max */Json_decode.field("temp_max", Json_decode.$$float, json),
          /* temp_min */Json_decode.field("temp_min", Json_decode.$$float, json)
        ];
}

function main(json) {
  return /* record */[/* main */Json_decode.field("main", temp, json)];
}

function forecasts(json) {
  return /* record */[/* list */Json_decode.field("list", (function (param) {
                  return Json_decode.array(main, param);
                }), json)];
}

var Decode = /* module */[
  /* temp */temp,
  /* main */main,
  /* forecasts */forecasts
];

function decode(data) {
  return forecasts(Json.parseOrRaise(data));
}

function forecast(plant) {
  var match = Process.env["APPID"];
  if (match !== undefined) {
    return fetch("http://samples.openweathermap.org/data/2.5/forecast?zip=" + (Plant$PlantSaver.zipToString(plant[/* location */0][/* zip */0]) + ("," + (Plant$PlantSaver.countryToString(plant[/* location */0][/* country */1]) + ("&appid=" + match))))).then((function (prim) {
                    return prim.text();
                  })).then((function (data) {
                  return Promise.resolve(forecasts(Json.parseOrRaise(data)));
                }));
  } else {
    throw NoAppId;
    return Promise.reject(undefined);
  }
}

function tomorrow(forecasts) {
  return Belt_Array.get(forecasts[/* list */0], 1);
}

exports.NoAppId = NoAppId;
exports.Decode = Decode;
exports.decode = decode;
exports.forecast = forecast;
exports.tomorrow = tomorrow;
/* process Not a pure module */
